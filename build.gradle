import java.text.SimpleDateFormat

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
    id "edu.wpi.first.GradleRIO" version "2019.1.1"
}

ext.kotlinVersion = "1.3.10"
ext.ktlintVersion = "0.29.0"
ext.sertainVersion = "a2c505171b318836e0619b3c25dabae3a7857bf5"
ext.badlogVersion = "d3f791967f11888df925af0a32178b264fce42a6"

check.dependsOn "ktlint"
compileKotlin.dependsOn "versionTxt"
tasks.whenTaskAdded { task ->
    if (task.name == "deploy" || task.name == "deployMain") task.dependsOn "assemble"
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "http://first.wpi.edu/FRC/roborio/maven/release" }
    maven { url "http://devsite.ctr-electronics.com/maven/release" }
    maven { url "https://www.kauailabs.com/maven2" }
}

configurations {
    ktlint
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compile project("meanlib")
    compile "com.github.SouthEugeneRoboticsTeam:badlog:$badlogVersion"
    compile "com.github.sertain.sertain:core:$sertainVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0"
    compile "com.kauailabs.navx.frc:navx-java:3.1.344"

    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    ktlint "com.github.shyiko:ktlint:$ktlintVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamOrDefault(2521)
        }
    }
    artifacts {
        frcJavaArtifact("frcJava") {
            targets << "roborio"
            debug = frc.getDebugOrDefault(false)
        }
        fileTreeArtifact("frcStaticFileDeploy") {
            files = fileTree(dir: "src/main/deploy")
            targets << "roborio"
            directory = "/home/lvuser/deploy"
        }
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes(
                "Main-Class": "org.sert2521.deepspace.MainKt"
        )
    }
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "rev-parse", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "rev-parse", "--abbrev-ref", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitFilesChanged = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "diff", "--name-only", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim().replace("\n", ", ")
}

task versionTxt()  {
    doLast {
        String resourcesDir = "$projectDir/src/main/resources"
        new File("$resourcesDir/branch.txt").text = getGitBranch()
        new File("$resourcesDir/commit.txt").text = getGitHash()
        new File("$resourcesDir/changes.txt").text = getGitFilesChanged()
        new File("$resourcesDir/buildtime.txt").text =
                new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())
    }
}

wrapper {
    gradleVersion = "5.1"
}
